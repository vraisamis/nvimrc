
[[plugins]]
repo = 'Shougo/neomru.vim'
on_if = 1
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
hook_add = '''
let g:unite_split_rule = 'botright'
nnoremap <silent> [unite] <nop>
nmap <Space> [unite]
nnoremap [unite]u :Unite 
nnoremap [unite]s :Unite source<CR>
nnoremap [unite]f :Unite file<CR>
nnoremap [unite]c :Unite tab buffer<CR>
nnoremap [unite]h :Unite file_mru directory_mru<CR>
nnoremap [unite]b :Unite bookmark<CR>
""  Unite menu settings
nnoremap [unite]m :Unite menu:action -vertical -winwidth=40<CR>
" init
if !exists("g:unite_source_menu_menus")
	let g:unite_source_menu_menus = {}
endif
let g:unite_source_menu_menus.action = {
			\ 'description' : 'My Shortcuts',
			\ }
let g:unite_source_menu_menus.action.candidates = [
			\ [ '~/.vim' , expand('~/.vim') ],
			\ [ 'vimrc' , expand('~/.vim/vimrc') ],
			\ [ 'plugin' , expand('~/.vim/plugin.vimrc') ],
			\ [ 'VimFiler' , 'VimFiler' ],
			\ [ 'VimShell' , 'VimShell' ],
			\ [ 'NERDTree' , 'NERDTreeToggle' ],
			\ [ 'run cpp' , 'QuickRun cpp'],
			\ [ 'run and show PDF' , 'call My_latex_compile_and_show_pdf()' ],
			\ [ 'open in browser' , 'PrevimOpen' ],
			\ ]

function! g:unite_source_menu_menus.action.map(key, value)
	let [word, value] = a:value
	if isdirectory(value)
		return {
					\ 'word'              : '[directory] '.word,
					\ 'kind'              : 'command',
					\ 'action__command' : ':VimFiler '.value
					\ }
	elseif !empty(glob(value))
		return {
					\ 'word'           : '[file] '.word,
					\ 'kind'           : 'file',
					\ 'default_action' : 'tabdrop',
					\ 'action__path'   : value
					\ }
	else
		return {
					\ 'word'            : '[command] '.word,
					\ 'kind'            : 'command',
					\ 'action__command' : value
					\ }
	endif
endfunction

function! My_latex_compile_and_show_pdf()
	exec "QuickRun"
	exec "!evince %:r.pdf &"
	return
endfunction

"for unite grep
if executable('ag')
	let g:unite_source_grep_command = 'ag'
	let g:unite_source_grep_default_opts = '--nogroup --nocolor --column'
	let g:unite_source_grep_recursive_opt = ''
endif

'''

[[plugins]]
repo = 'artur-shaik/vim-javacomplete2'
if = 0
depends = 'deoplete.nvim'
on_if = 0
# on_ft = 'java'
hook_post_source = '''
au FileType java setl omnifunc=javacomplete#Complete
'''

[[plugins]]
repo = 'osyo-manga/vim-monster'
# on_if = 0
on_ft = 'ruby'
hook_add = '''
" let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
\   "ruby" : '[^. *\t]\.\w*\|\h\w*::',
\}
'''

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_if = 0
# on_ft = 'ruby'

[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_if = 0
# on_ft = 'ruby'
