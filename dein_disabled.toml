
[[plugins]]
repo = 'justinmk/vim-dirvish'
if = 0

[[plugins]]
repo = 'Shougo/unite-outline'
if = 0
on_source = 'unite.vim'
hook_add = '''
nnoremap [unite]o :Unite outline -no-focus -no-quit -vertical -winwidth=40 -toggle<CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
# if = 0
build = 'make'
hook_post_update = '''
let g:dein#plugin.build = 'make'
'''

[[plugins]]
repo = 'Shougo/vimshell.vim'
if = 0
hook_add = '''
let g:vimshell_prompt_expr='getcwd()." > "'
let g:vimshell_prompt_pattern='^\f\+ > '
'''

[[plugins]]
repo = 'Shougo/vimfiler'
depends = 'unite.vim'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_no_default_key_mappings = 1
" let g:quickrun_config = {
"             \    "java": {
"             \        "exec": "java %S:r:gs?[/\\]?.?"
"             \    }
"             \}
'''

[[plugins]]
repo = 'osyo-manga/unite-filetype'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'unite.vim']
hook_add = '''
imap <expr><Tab>
\ neosnippet#jumpable() <Bar><Bar> neosnippet#expandable() ?
\ "\<Plug>(neosnippet_jump_or_expand)" : "\<Tab>"

" NOTE: 挙動が微妙
inoremap <silent> [i-unite] <nop>
imap <C-u> [i-unite]
imap <C-s> [i-unite]s
inoremap [i-unite]s <C-o>:Unite neosnippet neosnippet/user -start-insert -wrap -buffer-name=unite-snippets<CR>
nnoremap <silent> <C-s> :Unite neosnippet neosnippet/user -start-insert -wrap -buffer-name=unite-snippets<CR>

au FileType unite call s:unite_settings()
function s:unite_settings()
	nnoremap <buffer> <Esc> :q<CR>
	let unite = unite#get_current_unite()
	if unite.profile_name == 'unite-snippets'
		imap <buffer> <Tab> <Plug>(unite_do_default_action)
	end
endfunction'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/neoyank.vim'
depends = ['unite.vim']
hook_add = '''
nnoremap [unite]y :Unite history/yank<CR>
'''

[[plugins]]
repo = 'kmnk/vim-unite-giti'
depends = ['unite.vim']
hook_add = '''
nnoremap [unite]gg :Unite giti<CR>
nnoremap [unite]gs :Unite giti/status<CR>
'''

[[plugins]]
repo = 'basyura/unite-rails'
depends = ['unite.vim']
hook_add = '''
nnoremap [unite]r :Unite menu:rails<CR>
" init
if !exists("g:unite_source_menu_menus")
	let g:unite_source_menu_menus = {}
endif
let g:unite_source_menu_menus.rails = {
			\ 'description' : 'unite-rails sources',
			\ }
let g:unite_source_menu_menus.rails.command_candidates = {
			\ 'models'      : 'Unite rails/model',
			\ 'views'       : 'Unite rails/view',
			\ 'controllers' : 'Unite rails/controller',
			\ 'helpers'     : 'Unite rails/helper',
			\ 'mailers'     : 'Unite rails/mailer',
			\ 'lib'         : 'Unite rails/lib',
			\ 'DB'          : 'Unite rails/db',
			\ 'config'      : 'Unite rails/config',
			\ 'log'         : 'Unite rails/log',
			\ 'javascripts' : 'Unite rails/javascript',
			\ 'stypesheets' : 'Unite rails/stypesheet',
			\ 'bundle'      : 'Unite rails/bundle',
			\ 'bundle gems' : 'Unite rails/bundle_gem',
			\ 'routes'      : 'Unite rails/route',
			\ 'root'        : 'Unite rails/root',
			\ 'command'     : 'Unite rails/command',
			\ }
'''
#####

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
if = 0
